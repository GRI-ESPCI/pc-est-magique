map $uri $photo_dir {
    # uri directory (/foo/bar/hello.jpg -> /foo/bar/)
    ~(?<captured_dir>^\/photo\/[\w-]+\/[\w-]+)(\/_thumbs)?\/ $captured_dir;
}

server {
    # listen on port 443 (https)
    listen 443 ssl;
    server_name pc-est-magique.fr www.pc-est-magique.fr;

    # SSL (managed by Certbot)
    ssl_certificate /etc/letsencrypt/live/pc-est-magique.fr/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/pc-est-magique.fr/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # write access and error logs to pc-est-magique/logs
    access_log /home/pc-est-magique/pc-est-magique/logs/access.log;
    error_log /home/pc-est-magique/pc-est-magique/logs/error.log;

    location / {
        # forward application requests to the gunicorn server
        proxy_pass http://127.0.0.1:8000;
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /static {
        # serve static files directly, without forwarding to the application
        gzip_static on;
        alias /home/pc-est-magique/pc-est-magique/app/static;
        expires 30d;
    }

    location /photo/ {
        # serve photos directly, after checking user right to access it
        # (see http://nginx.org/en/docs/http/ngx_http_secure_link_module.html)
        set $secret PHOTOS_SECRET_KEY_value;
        secure_link $arg_md5,$arg_expires;
        secure_link_md5 "$secure_link_expires$photo_dir$remote_addr $secret";
        if ($secure_link != "1") {
            # security token does not match/expired: ask for a new one
            # (see doctring of route "photos" in app/routes/photos/routes.py
            # for explaination or /photo vs /photos)
            rewrite ^/photo/(.*)$ /photos/$1 redirect;
            # should never be reached, execpt if URI is bare /photo
            return 404;
        }
        # security check pass: serve directory
        alias /mnt/data/pc-est-magique/photos/;
        gzip_static on;
        expires 1h;
        add_header Cache-Control "must-revalidate, private";
    }

    location /bar_avatar/ {
        # serve bar avatars directly, after checking user right to access it
        # (see just above)
        set $secret PHOTOS_SECRET_KEY_value;
        secure_link $arg_md5,$arg_expires;
        secure_link_md5 "$secure_link_expires/bar_avatars$remote_addr $secret";
        if ($secure_link != "1") {
            return 401;
        }
        # security check pass: serve directory
        alias /mnt/data/pc-est-magique/bar_avatars/;
        gzip_static on;
        expires 1h;
        add_header Cache-Control "must-revalidate, private";
    }

    location /theatre_posters/ {
        # Serve theatre poster

        alias /mnt/data/pc-est-magique/photos/theatre/;
        gzip_static on;
        expires 30d;
    }

        location /club_q/ {
        # Serve theatre poster

        alias /mnt/data/pc-est-magique/photos/club_q/;
        gzip_static on;
        expires 30d;
    }


    location /_darkstat {
        # add GRI-only basic auth
        auth_basic "GRIs Only";
        auth_basic_user_file /etc/.htpasswd;
        # proxy to Darkstat (under HTTPS!)
        proxy_pass http://127.0.0.1:667;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # redirect /_darkstat to /_darkstat/
        rewrite /_darkstat$ /_darkstat/ permanent;
        # rewrite location from /_darkstat/<X> to <X>
        rewrite /_darkstat/?(.*) /$1 break;
    }

    location /_bandwidthd {
        # add GRI-only basic auth
        auth_basic "GRIs Only";
        auth_basic_user_file /etc/.htpasswd;
        # serve static Bandwith files
        alias /home/pc-est-magique/bandwidthd/;
        autoindex on;
        expires 30d;
    }
}

server {
    # HTTP: redirect vers HTTPS
    listen 80;
    server_name pc-est-magique.fr www.pc-est-magique.fr;

    return 301 https://pc-est-magique.fr$request_uri;

}
