"""empty message

Revision ID: 670f3245aa45
Revises: 410c2b098e9e
Create Date: 2023-04-18 23:35:50.690042

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "670f3245aa45"
down_revision = "410c2b098e9e"
branch_labels = None
depends_on = None

old_options = (
    "photos",
    "pceen",
    "collection",
    "album",
    "role",
    "bar",
    "bar_stats",
    "intrarez",
)
new_options = sorted(old_options + ("club_q",))

old_type = sa.Enum(*old_options, name="permission_scope")
new_type = sa.Enum(*new_options, name="permission_scope")
tmp_type = sa.Enum(*new_options, name="_permission_scope")


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "club_q_salle",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("nom", sa.String(length=64), nullable=False),
        sa.Column("description", sa.String(length=500), nullable=True),
        sa.Column("url", sa.String(length=64), nullable=True),
        sa.Column("adresse", sa.String(length=64), nullable=True),
        sa.Column("latitude", sa.Float(), nullable=True),
        sa.Column("longitude", sa.Float(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "club_q_season",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("nom", sa.String(length=64), nullable=False),
        sa.Column("promo_orga", sa.Integer(), nullable=False),
        sa.Column("debut", sa.DateTime(), nullable=True),
        sa.Column("fin", sa.DateTime(), nullable=True),
        sa.Column("fin_inscription", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "club_q_spectacle",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("nom", sa.String(length=64), nullable=False),
        sa.Column("categorie", sa.String(length=64), nullable=True),
        sa.Column("image_name", sa.String(length=64), nullable=True),
        sa.Column("description", sa.String(length=2500), nullable=True),
        sa.Column("date", sa.DateTime(), nullable=False),
        sa.Column("nb_tickets", sa.Integer(), nullable=False),
        sa.Column("unit_price", sa.Float(), nullable=False),
        sa.Column("_season_id", sa.Integer(), nullable=False),
        sa.Column("_salle_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["_salle_id"],
            ["club_q_salle.id"],
        ),
        sa.ForeignKeyConstraint(
            ["_season_id"],
            ["club_q_season.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "club_q_voeu",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("places_demandees", sa.Integer(), nullable=False),
        sa.Column("priorite", sa.Integer(), nullable=False),
        sa.Column("places_minimum", sa.Integer(), nullable=True),
        sa.Column("places_attribuees", sa.Integer(), nullable=True),
        sa.Column("_pceen_id", sa.Integer(), nullable=False),
        sa.Column("_spectacle_id", sa.Integer(), nullable=False),
        sa.Column("_season_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["_pceen_id"],
            ["pceen.id"],
        ),
        sa.ForeignKeyConstraint(
            ["_season_id"],
            ["club_q_season.id"],
        ),
        sa.ForeignKeyConstraint(
            ["_spectacle_id"],
            ["club_q_spectacle.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )

    # Create a temporary "_permission_scope" type, convert and drop the "old" type
    tmp_type.create(op.get_bind(), checkfirst=False)
    op.execute(
        "ALTER TABLE permission ALTER COLUMN scope TYPE _permission_scope USING scope::text::_permission_scope"
    )
    old_type.drop(op.get_bind(), checkfirst=False)
    # Create and convert to the "new" scope type
    new_type.create(op.get_bind(), checkfirst=False)
    op.execute(
        "ALTER TABLE permission ALTER COLUMN scope TYPE permission_scope USING scope::text::permission_scope"
    )
    tmp_type.drop(op.get_bind(), checkfirst=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("club_q_voeu")
    op.drop_table("club_q_spectacle")
    op.drop_table("club_q_season")
    op.drop_table("club_q_salle")

    # Convert 'output_limit_exceeded' scope into 'timed_out'
    op.execute("DELETE FROM permission WHERE scope='intrarez'")
    # Create a temporary "_permission_scope" type, convert and drop the "new" type
    tmp_type.create(op.get_bind(), checkfirst=False)
    op.execute(
        "ALTER TABLE permission ALTER COLUMN scope TYPE _permission_scope USING scope::text::_permission_scope"
    )
    new_type.drop(op.get_bind(), checkfirst=False)
    # Create and convert to the "old" scope type
    old_type.create(op.get_bind(), checkfirst=False)
    op.execute(
        "ALTER TABLE permission ALTER COLUMN scope TYPE permission_scope USING scope::text::permission_scope"
    )
    tmp_type.drop(op.get_bind(), checkfirst=False)
    # ### end Alembic commands ###
